// Mocks generated by Mockito 5.0.13 from annotations
// in movies_usf/test/home_vm_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:movies_usf/data/api_service.dart' as _i2;
import 'package:movies_usf/di/movies_repository.dart' as _i3;
import 'package:movies_usf/domain/lce.dart' as _i5;
import 'package:movies_usf/domain/movie.dart' as _i6;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeApiService extends _i1.Fake implements _i2.ApiService {}

/// A class which mocks [MoviesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMoviesRepository extends _i1.Mock implements _i3.MoviesRepository {
  MockMoviesRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ApiService get api => (super.noSuchMethod(Invocation.getter(#api),
      returnValue: _FakeApiService()) as _i2.ApiService);
  @override
  _i4.Stream<_i5.Lce<List<_i6.Movie>>> getMoviesFromServer(String? query) =>
      (super.noSuchMethod(Invocation.method(#getMoviesFromServer, [query]),
              returnValue: Stream<_i5.Lce<List<_i6.Movie>>>.empty())
          as _i4.Stream<_i5.Lce<List<_i6.Movie>>>);
  @override
  String toString() => super.toString();
}
